@mixin vertical-align($margin: -0.25em) {
  &:before {
    content: '';
    display: inline-block;
    height: 100%;
    vertical-align: middle;
    margin-right: $margin; 
  }
}

@mixin borderBox {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin border-radius($radius){
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-sizing($boxsizing){
  -webkit-box-sizing: $boxsizing;
  -moz-box-sizing: $boxsizing;
  box-sizing: $boxsizing;
}

@mixin transition($transition){
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin transform-origin($origin){
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -o-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin columns($columns) {
  -webkit-columns: $columns;
   -moz-columns: $columns;
        columns: $columns;
}

@mixin transform-style($style){
  -webkit-transform-style: $style;
  -moz-transform-style: $style;
  -o-transform-style: $style;
  transform-style: $style;
}

@mixin transform($transform){
   -webkit-transform: $transform;
   -moz-transform: $transform;
    -ms-transform: $transform;
     -o-transform: $transform;
         transform: $transform;
}

@mixin linear-gradient($startColor, $endColor) {
  background: -webkit-linear-gradient(90deg, $startColor 0%, $endColor 100%);
  background: -moz-linear-gradient(90deg, $startColor 0%, $endColor 100%);
  background: -o-linear-gradient(90deg, $startColor 0%, $endColor 100%);
  background: -ms-linear-gradient(90deg, $startColor 0%, $endColor 100%);
  background: linear-gradient(90deg, $startColor 0%, $endColor 100%);
}

@mixin vertical-gradient($startColor, $endColor) {
  background: -webkit-linear-gradient(0deg, $startColor 0%, $endColor 100%);
  background: -moz-linear-gradient(0deg, $startColor 0%, $endColor 100%);
  background: -o-linear-gradient(0deg, $startColor 0%, $endColor 100%);
  background: -ms-linear-gradient(0deg, $startColor 0%, $endColor 100%);
  background: linear-gradient(0deg, $startColor 0%, $endColor 100%);
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

@mixin respond-from($size) {
  @media screen and (min-width: $size) {
    @content;
  }
}

@mixin respond-to($size) {
  @media screen and (max-width: $size) {
    @content;
  }
}

@mixin respond-between($lower, $upper) {
  @media screen and (min-width: $lower) and (max-width: $upper) {
    @content;
  }
}

@mixin flex-direction($direction: row) {
  -webkit-flex-direction: $direction;
      -ms-flex-direction: $direction;
          flex-direction: $direction;
}

@mixin flex-wrap($wrap: nowrap) {
  @if $wrap == nowrap {
    -ms-flex-wrap: none;
  }
  @else {
    -ms-flex-wrap: $wrap;
  }
  -webkit-flex-wrap: $wrap;
          flex-wrap: $wrap;
}

@mixin flex-order($order: 0) {
  -ms-flex-order: $order;
  -webkit-order: $order;
      -ms-order: $order;
          order: $order;
}

@mixin justify-content($justify: flex-start) {
  @if $justify == flex-start {
    -ms-flex-pack: start;
  }
  @else if $justify == flex-end {
    -ms-flex-pack: end;
  }
  @elseif $justify == space-between {
    -ms-flex-pack: justify;
  }
  @else {
    -ms-flex-pack: $justify;
  }
  -webkit-justify-content: $justify;
      -ms-justify-content: $justify;
          justify-content: $justify;
}

@mixin align-items($align: auto) {
  @if $align == flex-start {
    -ms-flex-align: start;
  }
  @else if $align == flex-end {
    -ms-flex-align: end;
  }
  @else {
    -ms-flex-align: $align;
  }
  -webkit-align-items: $align;
      -ms-align-items: $align;
          align-items: $align;
}

@mixin align-content($align: auto) {
  @if $align == flex-start {
    -ms-flex-line-pack: start;
  }
  @else if $align == flex-end {
    -ms-flex-line-pack: end;
  }
  @else {
    -ms-flex-line-pack: $align;
  }
  -webkit-align-content: $align;
      -ms-align-content: $align;
          align-content: $align;
}

@mixin align-self($align: auto) {
  @if $align == flex-start {
    -ms-flex-item-align: start;
  }
  @else if $align == flex-end {
    -ms-flex-item-align: end;
  }
  @else {
    -ms-flex-item-align: $align;
  }
  -webkit-align-self: $align;
      -ms-align-self: $align;
          align-self: $align;
}

@mixin flex($value){
  -webkit-box-flex: $value;
  -moz-box-flex: $value;
  -webkit-flex: $value;
  -ms-flex: $value;
  flex: $value;
}

@mixin flex-display($important: false){
  @if ($important) {
    display: -webkit-box!important;
    display: -moz-box!important;
    display: -ms-flexbox!important;
    display: -webkit-flex!important;
    display: flex!important;
  }
  @else {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
  }
}